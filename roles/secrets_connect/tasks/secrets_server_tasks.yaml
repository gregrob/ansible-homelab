---
# Included tasks to configure SSH key access and encrypt secrets on the secrets server.
# These tasks run on the dynamically added secrets_server host as root.
#
# Steps performed:
# 1. Add the generated SSH public key to the secrets user's authorized_keys file
# 2. Set special permissions (0640) on authorized_keys for admin user read access
# 3. Run the encrypt-secrets.sh script to encrypt secrets with the newly added key

- block:

  # Add the generated public key to the secrets user's authorized_keys file
  - name: Add key to secrets server authorized_keys (secrets user)
    ansible.builtin.authorized_key:
      user: "{{ secret_server.secrets_user }}"
      key: "{{ secrets_pubkey_content.content | b64decode }}"
      state: present
      exclusive: false
      manage_dir: false

  # Ensure the authorized_keys file has the correct permissions (0640)
  # This is because the admin user then has read access to the file
  - name: Set permissions on authorized_keys file - special case for the secrets server
    ansible.builtin.file:
      path: "/home/{{ secret_server.secrets_user }}/.ssh/authorized_keys"
      mode: '0640'

  # Run the encryption script to encrypt secrets using the newly added key
  - name: Encrypt the secrets with the newly added key
    ansible.builtin.shell: ./encrypt-secrets.sh
    args:
      chdir: /srv/secrets

  delegate_to: secrets_server
  become: yes
  become_user: root
