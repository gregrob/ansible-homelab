---
# Role to configure Git settings and SSH connectivity for the admin user
#
# Steps performed:
#  1. Configures Git global user.name and user.email settings for the admin user
#  2. Adds GitHub's SSH public key to known_hosts to avoid SSH authenticity prompts

# Configure Git user name and email for the admin user
- name: Configure Git user settings
  become: true
  become_user: "{{ admin_user }}"
  ansible.builtin.git_config:
    name: "{{ item.name }}"
    scope: global
    value: "{{ item.value }}"
  loop:
    - { name: user.name,  value: "{{ git_name }}" }
    - { name: user.email, value: "{{ git_email }}" }

# Ensure admin user's .ssh directory exists
- name: Ensure admin user's .ssh directory exists
  become: true
  become_user: "{{ admin_user }}"
  ansible.builtin.file:
    path: "/home/{{ admin_user }}/.ssh"
    state: directory
    mode: '0700'
    owner: "{{ admin_user }}"
    group: "{{ admin_user }}"

# Add GitHub to known_hosts to avoid SSH authenticity prompt
- name: Add GitHub to known_hosts
  become: true
  become_user: "{{ admin_user }}"
  ansible.builtin.known_hosts:
    path: "/home/{{ admin_user }}/.ssh/known_hosts"
    name: github.com
    key: "{{ github_ssh_public_key }}"
    state: present
