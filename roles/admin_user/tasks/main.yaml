---
# Role to create an admin user on a target system.
#
# Steps performed:
#  1. Creates the admin group with specified GID
#  2. Creates the admin user with specified UID, groups, password, and shell
#  3. Sets up SSH directory with proper permissions
#  4. Adds Ansible controller and generic controller (i.e. main systems access) SSH keys for passwordless access
#  5. Disables HashKnownHosts in SSH config for easier known_hosts management
#  6. Pre-creates .ansible/tmp directory to avoid become_user warnings
#  7. Sets the default text editor to nano by adding EDITOR environment variable to .bashrc

# Ensure the admin group exists with the specified GID
- name: Ensure admin group exists with correct gid
  ansible.builtin.group:
    name: "{{ admin_group }}"
    gid: "{{ admin_gid }}"
    state: present

# Create the admin user with the specified UID, add to primary and supplementary groups,
# set password, shell, and ensure home directory is created
- name: Create admin user and add to appropriate groups (if not existing)
  ansible.builtin.user:
    name: "{{ admin_user }}"
    uid: "{{ admin_uid }}"
    comment: "{{ admin_full_name }}"
    group: "{{ admin_group }}"
    groups: "{{ admin_supplementary_groups | join(',') }}"
    append: yes
    password: "{{ admin_password | password_hash('sha512') }}"
    shell: /bin/bash
    create_home: yes
    state: present

# Ensure the .ssh directory exists in the admin user's home directory with correct permissions
- name: Ensure .ssh directory exists for admin user
  ansible.builtin.file:
    path: "/home/{{ admin_user }}/.ssh"
    state: directory
    mode: '0700'
    owner: "{{ admin_user }}"
    group: "{{ admin_group }}"

# Copy the Ansible controller's public SSH key into the admin user's authorized_keys
# allowing passwordless SSH login from the control machine
- name: Copy the ansible controller public key to admin user authorized_keys
  ansible.builtin.authorized_key:
    user: "{{ admin_user }}"
    key: "{{ ansible_controller_pubkey }}"
    state: present
    exclusive: false  # Do not want to overwrite other keys
    manage_dir: false  # We already ensured the directory exists

# Disable HashKnownHosts in SSH config to keep known_hosts file readable for easier management
- name: Disable HashKnownHosts for admin user
  ansible.builtin.blockinfile:
    path: "/home/{{ admin_user }}/.ssh/config"
    create: yes
    owner: "{{ admin_user }}"
    group: "{{ admin_user }}"
    mode: '0600'
    marker: "# {mark} ANSIBLE MANAGED HASHKNOWNHOSTS BLOCK"
    block: |
      Host *
        HashKnownHosts no

# Copy the Generic controller's public SSH key into the admin user's authorized_keys
# allowing passwordless SSH login from the control machine
- name: Copy the generic controller public key to admin user authorized_keys
  ansible.builtin.authorized_key:
    user: "{{ admin_user }}"
    key: "{{ generic_controller_pubkey }}"
    state: present
    exclusive: false  # Do not want to overwrite other keys
    manage_dir: false  # We already ensured the directory exists

# Pre-create the .ansible/tmp directory to avoid warnings from become_user tasks
- name: Ensure .ansible/tmp directory exists for admin user
  become: true
  ansible.builtin.file:
    path: "/home/{{ admin_user }}/.ansible/tmp"
    state: directory
    owner: "{{ admin_user }}"
    group: "{{ admin_user }}"
    mode: '0700'

# Set the default text editor to nano for the admin user by adding EDITOR environment variable to .bashrc
- name: Set EDITOR environment variable to nano for admin_user
  ansible.builtin.lineinfile:
    path: "/home/{{ admin_user }}/.bashrc"
    regexp: '^export EDITOR='
    line: 'export EDITOR=nano'
    state: present
    create: yes
    owner: "{{ admin_user }}"
    group: "{{ admin_user }}"
    mode: '0644'
