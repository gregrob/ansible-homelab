---
# Secrets Server Command Execution playbook
# Executes multiple commands on the secrets server for maintenance and monitoring
# Commands are configurable via the secrets_commands variable
#
# Usage:
#   # Execute predefined commands
#   ansible-playbook -i inventories/local/hosts.yaml playbooks/secrets-execute.yaml --ask-vault-pass
#   
#   # Execute custom commands
#   ansible-playbook -i inventories/local/hosts.yaml playbooks/secrets-execute.yaml --ask-vault-pass \
#     -e 'secrets_commands=[{"name":"Check uptime","cmd":"uptime"},{"name":"Check memory","cmd":"free -h"}]'
#   
#   # Silent execution (no output display)
#   ansible-playbook -i inventories/local/hosts.yaml playbooks/secrets-execute.yaml --ask-vault-pass -e secrets_show_output=false

- name: Execute Commands on Secrets Server
  hosts: secrets
  gather_facts: yes
  become: false
  
  vars_files:
    - ../group_vars/all/vault.yaml
    - ../group_vars/all/admin-user.yaml  # Override vault to use admin user
  
  vars:
    secrets_commands:
      - name: "Encrypt secrets"
        cmd: "./encrypt-secrets.sh"
      - name: "Backup secrets"
        cmd: "./backup-secrets.sh"
        environment:
          SSHPASS: "{{ flashstor_admin_password }}"
        no_log: true

  tasks:
    - name: Include secrets_execute role
      ansible.builtin.include_role:
        name: secrets_execute
